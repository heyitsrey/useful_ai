##Create new app

You are my **[LANGUAGE]** expert developer, Create my **[APPNAME]** app with me, You will always output every file in TOTAL if you changed it and you will always implement the ENTIRE feature. Unchanged files do not need to be output. Always apply dependency injection and clean‐code principles. 

## 1. Understanding Phase
1. Ask focused questions to fully clarify all requirements and constraints.  
2. Request any necessary documentation, existing code files, sample data, etc.


## 2. Analysis Phase
1. List all identified sub‑tasks (e.g., parsing configuration, computing trajectories, spawning enemies).  
2. Outline which classes or modules could best address each task.  
3. Identify and explicitly suggest design patterns that fit particular problems or contribute to a clean, maintainable architecture (e.g., Strategy, Observer, Factory). If I agree, use them in later step 5.
4. No code yet—only architectural descriptions and thought processes.

## 3. Design Phase
1. Define an interface or abstract base class for each identified component.  
2. Specify method signatures only (e.g., `spawnEnemy()`, `calculateNextSpawnArea()`).  
3. No concrete implementations—just structure and contracts.

## 4. Test Phase
1. Write unit tests for all interfaces and base classes.  
2. Use **[LIBRARY NAME]** for your test framework and mocks.  
3. Ensure each test is meaningful, isolated, and passes only when the contract is met.

## 5. Implementation Phase
1. Implement the concrete code so that all tests pass green.  
2. Output **only** the files you modified.  
3. Fully satisfy the functionality outlined in previous phases.

**Note:** In each phase, return exactly what’s requested and nothing more. We will create it step by step, and you will only go over to the next phase when I tell you to.

_____________________________________________________________________________________________________________________

##Add Feature##

You are my LANGUAGE expert developer, Optimize my APPNAME app, You will always output every file
in TOTAL if you changed it and you will always implement the ENTIRE feature. Unchanged files do
not need to be output You will first ask questions to make sure you understood everything
perfectly right and ask for further info, like documentation, files,... if needed. In your second call you
will output the files.

_____________________________________________________________________________________________________________________

I need to implement [specific functionality] in [programming language].
Key requirements:
1. [Requirement 1]
2. [Requirement 2]
3. [Requirement 3]
Please consider:
- Error handling
- Edge cases
- Performance optimization
- Best practices for [language/framework]
- Best practices for Clean Code
Please do not unnecessarily remove any comments or code.
Generate the code with clear comments explaining the logic.

_____________________________________________________________________________________________________________________

Understanding Code

Can you explain the following part of the code in detail:
[paste code section]
Specifically:
1. What is the purpose of this section?
2. How does it work step-by-step?
3. Are there any potential issues or limitations with this approach?

_____________________________________________________________________________________________________________________

Code Reviews
Please review the following code:
[paste your code]
Consider:
1. Code quality and adherence to best practices
2. Potential bugs or edge cases
3. Performance optimizations
4. Readability and maintainability
5. Any security concerns
Suggest improvements and explain your reasoning for each suggestion.

_____________________________________________________________________________________________________________________

Unit Tests

Generate unit tests for the following function:
[paste function]
Include tests for:
1. Normal expected inputs
2. Edge cases
3. Invalid inputs
Use [preferred testing framework] syntax.
Use the Arrange-Act-Assert pattern.

_____________________________________________________________________________________________________________________

Optimizing

Here's a piece of code that needs optimization:
[paste code]
Please suggest optimizations to improve its performance. For each suggestion, explain the expected improvement and any trade-offs.

_____________________________________________________________________________________________________________________

Classes

Create a [class/module] for [specific functionality] in [programming language].
Include:
1. Constructor/initialization
2. Main methods with clear docstrings
3. Any necessary private helper methods
4. Proper encapsulation and adherence to OOP principles
5. Split Code into .hpp and .cpp files
6. Use fitting namespaces
7. Use templates when it fits
